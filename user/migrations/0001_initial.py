# Generated by Django 4.2.3 on 2023-07-08 11:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('uid', models.CharField(max_length=19, unique=True, verbose_name='Индивидуальный код')),
                ('login', models.CharField(blank=True, default='', max_length=50, verbose_name='Логин')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='Последний вход')),
                ('is_admin', models.BooleanField(default=False, verbose_name='Администратор')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Персонал')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Суперпользователь')),
                ('user_type', models.CharField(choices=[('client', 'Клиент'), ('hotel', 'Отельер'), ('moder', 'Модератор'), ('admin', 'Админ'), ('owner', 'Владелец')], default='client', max_length=50, verbose_name='Тип пользователя')),
                ('username', models.CharField(blank=True, default='', max_length=30, verbose_name='Имя')),
                ('lastname', models.CharField(blank=True, default='', max_length=30, verbose_name='Фамилия')),
                ('middlename', models.CharField(blank=True, default='', max_length=30, verbose_name='Отчество')),
                ('phone', models.CharField(blank=True, default='', max_length=50, verbose_name='Телефон')),
                ('active_phone', models.BooleanField(default=0, verbose_name='Телефон - активнен')),
                ('active_code_phone', models.CharField(blank=True, max_length=30, null=True, verbose_name='Телефон - код активации')),
                ('phone_2', models.CharField(blank=True, default='', max_length=50, verbose_name='Доп. телефон')),
                ('active_phone_2', models.BooleanField(default=0, verbose_name='Доп. телефон - активнен')),
                ('active_code_phone_2', models.CharField(blank=True, max_length=30, null=True, verbose_name='Доп. телефон - код активации')),
                ('rbal', models.PositiveIntegerField(blank=True, default=0, verbose_name='Реальные деньги')),
                ('nationality', models.CharField(blank=True, default='', max_length=20, verbose_name='Национальность/гражданство')),
                ('date_birth', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('gender', models.CharField(max_length=20, verbose_name='Пол')),
                ('email', models.CharField(blank=True, max_length=40, null=True, verbose_name='Почта')),
                ('active_email', models.BooleanField(default=0, verbose_name='Почта - активна')),
                ('active_code_email', models.CharField(blank=True, default=0, max_length=30, null=True, verbose_name='Почта - код активации')),
                ('token_google', models.CharField(blank=True, max_length=40, null=True, verbose_name='Токен Google')),
                ('token_vk', models.CharField(blank=True, max_length=40, null=True, verbose_name='Токен ВКонтакте')),
                ('token_telegram', models.CharField(blank=True, max_length=40, null=True, verbose_name='Токен Telegram')),
                ('access_token', models.CharField(blank=True, max_length=200, null=True, verbose_name='Токен доступа')),
                ('access_token_key', models.CharField(blank=True, max_length=200, null=True, verbose_name='Ключ токена доступа')),
                ('additional_info', models.JSONField(blank=True, default=dict, verbose_name='Доп. параметры')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='Companion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=60)),
                ('lastname', models.CharField(max_length=60)),
                ('firstname', models.CharField(max_length=60)),
                ('phone', models.CharField(max_length=20)),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Компаньены',
            },
        ),
        migrations.CreateModel(
            name='Search',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sid', models.CharField(max_length=19)),
                ('city', models.CharField(max_length=50)),
                ('date_1', models.DateField()),
                ('date_2', models.DateField()),
                ('count_a', models.SmallIntegerField()),
                ('сompanions', models.ManyToManyField(to='user.companion')),
            ],
            options={
                'verbose_name': 'Поиски',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('text', models.TextField()),
                ('url', models.URLField(blank=True, default=None, null=True)),
                ('datetime', models.DateTimeField()),
                ('viewed', models.BooleanField(default=False)),
                ('push', models.BooleanField(default=False)),
                ('delete_on_click', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Уведомление',
                'verbose_name_plural': 'Уведомления',
            },
        ),
        migrations.CreateModel(
            name='FinancialOperation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField()),
                ('isBonus', models.BooleanField(default=False)),
                ('datetime', models.DateTimeField()),
                ('operation_type', models.CharField(max_length=50)),
                ('comments', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Child',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.SmallIntegerField()),
                ('sid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.search')),
            ],
            options={
                'verbose_name': 'Дети',
            },
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=60)),
                ('number', models.CharField(max_length=16)),
                ('valid_until', models.CharField(max_length=5)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Bonus_rubles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.PositiveIntegerField()),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('text', models.CharField(default='', max_length=100)),
                ('notification_marks', models.JSONField(blank=True, default={'1_m': False, '2_d': False, '2_m': False, '3_m': False, '4_m': False, '5_m': False, '7_d': False})),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Бонусы пользователя',
            },
        ),
    ]
