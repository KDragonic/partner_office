# Generated by Django 4.2.3 on 2023-07-08 11:28

import brontur.funs
import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import hotel.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=50)),
                ('region', models.CharField(blank=True, max_length=50, null=True)),
                ('street', models.CharField(max_length=50)),
                ('body', models.CharField(blank=True, max_length=50, null=True)),
                ('house', models.CharField(max_length=10)),
                ('floor', models.CharField(blank=True, max_length=3, null=True)),
                ('apartment', models.CharField(blank=True, max_length=7, null=True)),
                ('coordinates', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Адрес',
                'verbose_name_plural': 'Адреса',
            },
        ),
        migrations.CreateModel(
            name='Bonus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.PositiveIntegerField()),
                ('date', models.DateTimeField(default=datetime.datetime(2023, 7, 8, 11, 28, 27, 279435, tzinfo=datetime.timezone.utc))),
                ('text', models.CharField(default='', max_length=100)),
                ('notification_marks', models.JSONField(blank=True, default={'1_m': False, '2_d': False, '2_m': False, '3_m': False, '4_m': False, '5_m': False, '7_d': False})),
            ],
            options={
                'verbose_name': 'Бонусы отеля',
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.CharField(default=brontur.funs.generate_booking_id, max_length=20, primary_key=True, serialize=False, unique=True, verbose_name='ID бронирования')),
                ('start_date_time', models.DateTimeField(verbose_name='Начала бронирования')),
                ('end_date_time', models.DateTimeField(verbose_name='Окончания бронирования')),
                ('status', models.CharField(choices=[('new', 'Новое'), ('verified', 'Подтверждено'), ('settled', 'Заселен'), ('left', 'Выехал'), ('cancelled', 'Отменен'), ('close', 'Закрыт')], max_length=20, verbose_name='Статус')),
                ('adults_count', models.SmallIntegerField(verbose_name='Кол-во взрослых')),
                ('children_count', models.SmallIntegerField(verbose_name='Кол-во детей')),
                ('hotel_price', models.PositiveIntegerField(verbose_name='Цена гостиницы (руб)')),
                ('site_price', models.PositiveIntegerField(verbose_name='Цена сайта (руб)')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарии')),
                ('payment_status', models.CharField(choices=[('not_paid', 'Не оплачено'), ('site_paid', 'Оплачено для сайта'), ('full_paid', 'Полная оплата'), ('site_refund', 'Возврат оплаты от сайта'), ('full_refund', 'Возврат полной оплаты')], max_length=20, verbose_name='Статус оплаты')),
                ('payment_for_accommodation', models.BooleanField(default=False, verbose_name='Оплата за проживание')),
                ('is_stay_bonus', models.BooleanField(default=False, verbose_name='Получены - Бонусы за проживание')),
                ('datetime_stay_bonus', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Дата и время получения - Бонусы за проживание')),
                ('is_review_bonus', models.BooleanField(default=False, verbose_name='Получены - Бонусы за отзыв')),
                ('is_hotel_bonus', models.BooleanField(default=False, verbose_name='Получены - Бонусы за проживание для отеля')),
                ('datetime_hotel_bonus', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Дата и время получения - онусы за проживание для отеля')),
                ('orderId', models.CharField(blank=True, max_length=100, null=True, verbose_name='OrderId Сбера')),
                ('response_to_cancellation', models.BooleanField(blank=True, default=False, null=True, verbose_name='Ответ на отмену')),
                ('hotel_cancellation', models.BooleanField(blank=True, default=None, null=True, verbose_name='Отмена брони отелем')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата и время создания')),
                ('is_delete', models.BooleanField(default=False, verbose_name='Флаг удаления')),
                ('param', models.JSONField(blank=True, default=dict, null=True)),
            ],
            options={
                'verbose_name': 'Брон',
                'verbose_name_plural': 'Брони',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField()),
                ('quality_of_service', models.FloatField()),
                ('matching_photos', models.FloatField()),
                ('purity', models.FloatField()),
                ('overall_rating', models.FloatField()),
                ('text', models.TextField()),
            ],
            options={
                'verbose_name': 'Комментарий',
                'verbose_name_plural': 'Комментарии',
            },
        ),
        migrations.CreateModel(
            name='Favourite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='GroupBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='HBoost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('super', models.BooleanField()),
                ('date', models.DateTimeField()),
            ],
            options={
                'verbose_name': 'Буст отеля',
                'verbose_name_plural': 'Бусты отеля',
            },
        ),
        migrations.CreateModel(
            name='HImg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=hotel.models.file_path)),
            ],
            options={
                'verbose_name': 'Изображение отеля',
                'verbose_name_plural': 'Изображения отеля',
            },
        ),
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enable', models.BooleanField(default=1, verbose_name='Включен')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('descriptions', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('type_hotel', models.CharField(choices=[('apart-hotel', 'Апарт-отель'), ('apartments', 'Апартамент'), ('flat', 'Квартира'), ('recreation center', 'База отдыха'), ('hotel_1', 'Гостиница'), ('bungalow', 'Бунгало'), ('boutique hotel', 'Бутик-отель'), ('villa', 'Вилла'), ('glamping', 'Глэмпинг'), ('guest house', 'Гостевой дом'), ('residential premises', 'Жилое помещение'), ('castle', 'Замок'), ('camping', 'Кемпинг'), ('resort hotel', 'Курортный отель'), ('furnished rooms', 'Меблированные комнаты'), ('mini-hotel', 'Мини-отель'), ('bed and breakfast (b&b)', 'Ночлег и завтрак (B&B)'), ('hotel', 'Отель'), ('sanatorium', 'Санаторий'), ('farm', 'Ферма'), ('hostel', 'Хостел'), ('private house', 'Частный дом'), ('chalet', 'Шале')], default='hotel', max_length=150, verbose_name='Тип отеля')),
                ('check_in_time', models.TimeField(blank=True, null=True, verbose_name='Время заезда')),
                ('departure_time', models.TimeField(blank=True, null=True, verbose_name='Время выезда')),
                ('stars', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='Звезды')),
                ('breakfast', models.BooleanField(blank=True, null=True, verbose_name='Завтрак')),
                ('lunch', models.BooleanField(blank=True, null=True, verbose_name='Обед')),
                ('dinner', models.BooleanField(blank=True, null=True, verbose_name='Ужин')),
                ('real_money', models.IntegerField(default=0, verbose_name='Реальные деньги')),
                ('rating_stat', models.SmallIntegerField(default=0, verbose_name='Статистика рейтинга')),
                ('rating_amount', models.SmallIntegerField(default=0, verbose_name='Количество рейтингов')),
                ('reviews_amount', models.SmallIntegerField(default=0, verbose_name='Отзывы')),
                ('coordinates', models.CharField(blank=True, max_length=50, null=True, verbose_name='Координаты')),
                ('percentage', models.PositiveSmallIntegerField(default=14, validators=[django.core.validators.MinValueValidator(14), django.core.validators.MaxValueValidator(30)], verbose_name='Процент')),
                ('rank_points', models.PositiveIntegerField(default=0, verbose_name='Очки рейтинга')),
                ('instant_booking', models.BooleanField(verbose_name='Мгновенное бронирование')),
                ('date_when_you_start_receiving_guests', models.DateField(verbose_name='Дата начала приема гостей')),
                ('allowed_child', models.BooleanField(verbose_name='Дети разрешены')),
                ('allowed_animal', models.BooleanField(verbose_name='Домашние животные разрешены')),
                ('allowed_smoking', models.BooleanField(verbose_name='Курение разрешено')),
                ('allowed_party', models.BooleanField(verbose_name='Вечеринки разрешены')),
                ('minimum_days_before_arrival', models.FloatField(verbose_name='Минимальное количество дней до заселение')),
                ('minimum_days_of_stay', models.SmallIntegerField(verbose_name='Минимальное количество дней пребывания')),
                ('for_long_term_stays', models.CharField(max_length=10, verbose_name='Скидка при длительном проживании')),
                ('for_long_term_stays_minimum_days_of_stay', models.SmallIntegerField(verbose_name='Минимальное количество дней при длительном проживании')),
                ('cleaning_fee', models.CharField(max_length=10, verbose_name='Плата за уборку')),
                ('is_delete', models.BooleanField(default=False, verbose_name='Флаг удаления')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_pending', models.BooleanField(default=True)),
                ('channel_manager', models.CharField(blank=True, default='', max_length=100, verbose_name='Ченел менедеж')),
                ('additional_info', models.JSONField(blank=True, default=dict, verbose_name='Доп. параметры')),
            ],
            options={
                'verbose_name': 'Отель',
                'verbose_name_plural': 'Отели',
            },
        ),
        migrations.CreateModel(
            name='HService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('section', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Услуга отеля',
                'verbose_name_plural': 'Услуги отеля',
            },
        ),
        migrations.CreateModel(
            name='RCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enable', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=60)),
                ('price_base', models.PositiveIntegerField()),
                ('min_days', models.IntegerField()),
                ('offer_type', models.CharField(choices=[('number', 'Номер'), ('place_in_the_room', 'Место в номере'), ('atelier', 'Студия'), ('flat', 'Квартира'), ('apartments', 'Апартаменты'), ('house', 'Дом'), ('cottage', 'Коттедж'), ('villa', 'Вилла')], max_length=20)),
                ('the_amount_of_the_security_deposit', models.CharField(max_length=40)),
                ('square', models.PositiveIntegerField()),
                ('max_adults', models.PositiveIntegerField()),
                ('count_room', models.PositiveIntegerField()),
                ('count_bedrooms', models.PositiveIntegerField()),
                ('beds', models.JSONField(blank=True, default=dict, null=True)),
                ('description_of_the_room', models.TextField(blank=True, null=True)),
                ('is_delete', models.BooleanField(default=False, verbose_name='Флаг удаления')),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rcategory_hotel', to='hotel.hotel')),
            ],
            options={
                'verbose_name': 'Категория комнаты',
                'verbose_name_plural': 'Категории комнат',
            },
        ),
        migrations.CreateModel(
            name='RService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
            ],
            options={
                'verbose_name': 'Услуга номера',
                'verbose_name_plural': 'Услуги номера',
            },
        ),
        migrations.CreateModel(
            name='RSubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_base', models.IntegerField()),
                ('name', models.CharField(max_length=50)),
                ('max_adults', models.PositiveSmallIntegerField(default=2)),
                ('max_children', models.PositiveSmallIntegerField(default=1)),
                ('parent_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotel.rcategory')),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enable', models.BooleanField(default=1)),
                ('room_number', models.CharField(max_length=10)),
                ('is_delete', models.BooleanField(default=False, verbose_name='Флаг удаления')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rcategory', to='hotel.rcategory')),
            ],
            options={
                'verbose_name': 'Номер отеля',
                'verbose_name_plural': 'Номера отеля',
            },
        ),
        migrations.CreateModel(
            name='RImg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=hotel.models.file_path)),
                ('rcategory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_img', to='hotel.rcategory')),
            ],
            options={
                'verbose_name': 'Изображение комнаты',
                'verbose_name_plural': 'Изображения комнаты',
            },
        ),
        migrations.AddField(
            model_name='rcategory',
            name='service',
            field=models.ManyToManyField(blank=True, related_name='rservice', to='hotel.rservice'),
        ),
        migrations.CreateModel(
            name='PricePerDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('price', models.CharField(blank=True, max_length=10, null=True)),
                ('days_min', models.IntegerField(blank=True, null=True)),
                ('rc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotel.rcategory')),
                ('subrc', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hotel.rsubcategory')),
            ],
        ),
        migrations.CreateModel(
            name='Price_number_people',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.SmallIntegerField()),
                ('value', models.IntegerField()),
                ('rc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotel.rcategory')),
            ],
        ),
    ]
